name: Deploy Python package

concurrency:
  group: production
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_weatherStation:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python for build check
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
  deploy_weatherStation:
    needs: build_weatherStation
    runs-on: [self-hosted, linux]
    environment: production
    env:
      API_KEY_WEATHER:  ${{ secrets.API_KEY_WEATHER }}
      API_KEY_NEWS:  ${{ secrets.API_KEY_NEWS }}
      APP_DIR: ${{ vars.APP_DIR }}
    steps:
      - name: Set up Python for deployment
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: deploy Weather Station
        run: echo "Trying to Deploy"
      - name: Remove app directory ${{ vars.APP_DIR }}
        run:  | 
          if [ -e "ssh ${{ vars.USER }}@${{ vars.HOSTNAME }} '/opt/weather_station'" ]; 
            then ssh ${{ vars.USER }}@${{ vars.HOSTNAME }} "rm -R ${{ vars.APP_DIR }}"; 
          fi
      - name: Cloning Weather Station
        run: ssh ${{ vars.USER }}@${{ vars.HOSTNAME }} "sudo git clone https://github.com/Ian-s-Company/weather_station.git ${{ vars.APP_DIR }}"
      - name: APT Update
        run: ssh -v ${{ vars.USER }}@${{ vars.HOSTNAME }} "sudo apt update; sudo apt -y upgrade:python -m venv weather_station_venv;source weather_station_venv/bin/activate;pip install requests pillow gpiozero pytest;"
      - name: Test Weather API
        run: | 
          export API_KEY_WEATHER=${{ secrets.API_KEY_WEATHER }}
          pytest tests/test_weatherapi.py
      #- name: Starting Weather Station
      #  run: python ${{ vars.APP_DIR }}/weatherStation_main.py ${{ secrets.API_KEY_WEATHER }} ${{ secrets.API_KEY_NEWS }}
